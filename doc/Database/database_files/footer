require(['core/first'],function(){require(['theme_essential/bootstrap','theme_essential/anti_gravity','core/log'],function(bootstrap,ag,log){log.debug('Essential JavaScript initialised')})});
YUI.add('moodle-theme_essential-coloursswitcher',function(Y){var SCHEMES=['default','alternative1','alternative2','alternative3','alternative4'],ColoursSwitcher=function(){ColoursSwitcher.superclass.constructor.apply(this,arguments)};ColoursSwitcher.prototype={initializer:function(config){var i,s;for(i in SCHEMES){s=SCHEMES[i];if(Y.one(document.body).hasClass('essential-colours-'+s))this.set('scheme',s);Y.all(config.div+' .colours-'+s).each(function(node){node.ancestor().on('click',this.setScheme,this,s)},this)}},setScheme:function(e,scheme){e.preventDefault();var prefix='essential-colours-';Y.one(document.body).replaceClass(prefix+this.get('scheme'),prefix+scheme);this.set('scheme',scheme);M.util.set_user_preference('theme_essential_colours',scheme)}};Y.extend(ColoursSwitcher,Y.Base,ColoursSwitcher.prototype,{NAME:'Essential theme colours scheme switcher',ATTRS:{scheme:{value:'default'}}});M.theme_essential=M.theme_essential||{};M.theme_essential.initColoursSwitcher=function(cfg){return new ColoursSwitcher(cfg)}},'@VERSION@',{requires:['base','node']});
function customise_dock_for_theme(dock){dock.on('dock:panelgenerated',function(){dock.get('panel').once('dockpanel:beforeshow',function(){Y.all('.dockeditempanel_content').addClass('block')});dock.get('panel').on('dockpanel:beforeshow',function(){var content=Y.all('.dockeditempanel_content');content.setStyle('maxWidth',content.get('winWidth')-dock.get('dockNode').get('offsetWidth')-10)})});dock.on('dock:initialised',function(){var navbar=Y.one('header.navbar'),navbarbtn=Y.one('header.navbar .btn-navbar'),navcollapse=Y.one('header.navbar .nav-collapse'),container=Y.one('#dock .dockeditem_container'),margintop=null,newmargintop=null,diff=null;if(navbar&&navbarbtn&&container){margintop=parseInt(container.getStyle('marginTop').replace(/px$/,''),10);diff=margintop-parseInt(navbar.get('offsetHeight'),10);navbarbtn.ancestor().on('click',function(){navcollapse.toggleClass('active');if(!this.hasClass('active')){newmargintop=(parseInt(navbar.get('offsetHeight'),10)+diff);container.setStyle('marginTop',newmargintop+'px')}else container.setStyle('marginTop',margintop+'px');navcollapse.toggleClass('active');dock.fire('dock:itemschanged')},navbarbtn)}})}