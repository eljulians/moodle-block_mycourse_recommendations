#;Class;Method;Values;Comments;Technique;Tested?;Result;Notes;Author;Date
1;db/database_helper;insert_associations;"$number = 3
$current_userids = array(1, 2, 3)
$current_courseid = 1
$historic_userids = array(100, 200, 300)
$historic_courseid = 2;
$week = 1";Test that associations are inserted properly, as they are supposed to be inserted, with no exception thrown.;Exception;Yes;Ok;;Julen Pardo;09/02/2016
2;db/database_helper;insert_associations;"$number = 4
$current_userids = array(1, 2, 3, 4)
$current_courseid = 1
$historic_userids = array(100, 200, 300)
$historic_courseid = 2;
$week = 1";Test that exception is thrown, because $number parameter is specifying the length of all the arrays, and is higher than at least one of the arrays.;Exception;Yes;Ok;;Julen Pardo;09/02/2016
3;db/database_helper;insert_recommendations;"$number = 3
$associationsids = array(1, 2, 3)
$resourcesids = array(4, 5, 6)
$priorities = array(7, 8, 9)";Test that recommendations are inserted properly, as they are supposed to be inserted, with no exception thrown.;Exception;Yes;Ok;;Julen Pardo;09/02/2016
4;db/database_helper;insert_recommendations;"$number = 4
$associationsids = array(1, 2, 3)
$resourcesids = array(4, 5, 6)
$priorities = array(7, 8, 9, 10)";Test that exception is thrown, because $number parameter is specifying the length of all the arrays, and is higher than at least one of the arrays.;Exception;Yes;Ok;;Julen Pardo;09/02/2016
5;matrix/decimal_matrix;transform_queried_data;"$input[0]->userid = 1
$input[0]->moduleid = 10
$input[0]->log_views = 45
$input[1]->userid =  1
$input[1]->moduleid = 20 
$input[1]->log_views = 31
$input[2]->userid = 1
$input[2]->moduleid = 30
$input[2]->log_views = 5
$input[3]->userid = 2
$input[3]->moduleid = 10
$input[3]->log_views = 16
$input[4]->userid = 3
$input[4]->moduleid = 20
$input[4]->log_views = 57
$input[5]->userid = 3
$input[5]->moduleid = 30
$input[5]->log_views = 24
$input[6]->userid = 4
$input[6]->moduleid = 10
$input[6]->log_views = 68";Test that, recieving the data queried from database (this input data is generated manually, to facilitate the process), generates a user/module matrix of log views.;Equivalence;Yes;Ok;;Julen Pardo;09/02/2016
6;associator/cosine_similarity_associator;dot_product;"$vector1[0] = 1
$vector1[1] = 5
$vector1[2] = 67
$vector1[3] = 14
$vector2[0] = 7
$vector2[1] = 71
$vector2[2] = 154
$vector2[3] = 9";"Test the mathematic operation (aka ""scalar product"") for the given vectors.";Equivalence;Yes;Ok;Using reflection to access the methods, since they're private.;Julen Pardo;10/02/2016
7;associator/cosine_similarity_associator;vector_module;"$vector[0] = 1
$vector[1] = 5
$vector[2] = 67
$vector[3] = 14";Test the mathematic operation for the given vector.;Equivalence;Yes;Ok;Using reflection to access the methods, since they're private.;Julen Pardo;10/02/2016
8;associator/cosine_similarity_associator;cosine_similarity;"$vector1[0] = 1
$vector1[1] = 5
$vector1[2] = 67
$vector1[3] = 14
$vector2[0] = 7
$vector2[1] = 71
$vector2[2] = 154
$vector2[3] = 9";Test the cosine similarity between the given vectors. The formula is = dot_product($vector1, $vector2) / vector_module($vector1) * vector_module($vector2).;Equivalence;Yes;Ok;Using reflection to access the methods, since they're private.;Julen Pardo;10/02/2016
9;associator/cosine_similarity_associator;create_associations_matrix;"$historicdata['1']['10'] = 54
$historicdata['1']['11'] = 1
$historicdata['1']['12'] = 35
$historicdata['1']['13'] = 65
$historicdata['2']['10'] = 145
$historicdata['2']['11'] = 65
$historicdata['2']['12'] = 46
$historicdata['2']['13'] = 123
$historicdata['3']['10'] = 6
$historicdata['3']['11'] = 76
$historicdata['3']['12'] = 45
$historicdata['3']['13'] = 12
$historicdata['4']['10'] = 65
$historicdata['4']['11'] = 1254
$historicdata['4']['12'] = 54
$historicdata['4']['13'] = 54
$historicdata['5']['10'] = 12
$historicdata['5']['11'] = 76
$historicdata['5']['12'] = 45
$historicdata['5']['13'] = 78
$historicdata['6']['10'] = 32
$historicdata['6']['11'] = 489
$historicdata['6']['12'] = 12
$historicdata['6']['13'] = 37

$currentdata['100']['10'] = 456
$currentdata['100']['11'] = 71
$currentdata['100']['12'] = 23
$currentdata['100']['13'] = 47
$currentdata['101']['10'] = 31
$currentdata['101']['11'] = 217
$currentdata['101']['12'] = 41
$currentdata['101']['13'] = 34
$currentdata['102']['10'] = 31
$currentdata['102']['11'] = 87
$currentdata['102']['12'] = 64
$currentdata['102']['13'] = 12";Test that the association matrix between current and historic users is created, receiving matrixes of both types of users. These matrixes are the result of the query to database, which retrieves the log views of each user for each module.;Equivalence;Yes;Ok;;Julen Pardo;10/02/2016
10;db/database_helper;get_students_from_course;<Using data generator>;Test that the function retrieves correctly users enrolled in a course.;Equivalence/Exception;Yes;Ok;;Julen Pardo;12/02/2016
11;db/database_helper;insert_selections;"$course = 50
$year = 2016
$users[0] = 100
$users[1] = 101
$users[2] = 102";Test that the function inserts correctly users for a course and year, after inserting, querying table's data and asserting that is equal to the inserted one.;Equivalence/Exception;Yes;Ok;;Julen Pardo;12/02/2016
12;db/database_helper;find_course_previous_teachings_ids;"$currentcourseid = <generated>
$currentyear = 2016";"The courses are created using the data generator, so the id is unknown.
Tests that the function retrieves correctly  the number of previous teachings for the given id, finding courses with the same fullname.";Equivalence;Yes;Ok;Using reflection to access the methods, since it's protected.;Julen Pardo;15/02/2016
13;db/database_helper;get_previous_courses_students_number;"$currentcourseid = <generated>
$currentyear = 2016";"The courses and students are created using the data generator, so the ids are unknown.
Tests that the function retrieves correctly the number of students enroled in previous teachings of the given course id.";Equivalence;Yes;Ok;;Julen Pardo;15/02/2016
14;db/database_helper;get_previous_courses_resources_number;"$currentcourseid = <generated>
$currentyear = 2016";"The courses and resources are created using the data generator, so the ids are unknown.
Tests that the function retrieves correctly the number of resources of previous teachings of the given course id.";Equivalence;Yes;Ok;The created resources are of the types hardcoded in class function.;Julen Pardo;15/02/2016
15;course_filter/course_filter;meets_minimum_previous_courses;"$currentcourseid = <generated>
$currentyear = 2016";"There are three different tests for this method:
 - One that creates one course less than the minimum (expecting to return false).
 - One that creates the same courses as the minimum (expecting to return true).
 - One that creates one course more than the minimum (expecting to return true).
The courses are created using the data generator, so the ids are unknown.";Boundary;Yes;Ok;"The results of the test of this method is the result of all the boundary tests created; if one of these boundary test fails, the result of the test of this method will be considered as failed.";Julen Pardo;16/02/2016
16;course_filter/course_filter;meets_minimum_resources;"$currentcourseid = <generated>
$currentyear = 2016";"There are three different tests for this method:
 - One that creates one resource less than the minimum (expecting to return false).
 - One that creates the same resources as the minimum (expecting to return true).
 - One that creates one more resource than the minimum (expecting to return true).
The courses and resources are created using the data generator, so the ids are unknown.";Boundary;Yes;Ok;"The results of the test of this method is the result of all the boundary tests created; if one of these boundary test fails, the result of the test of this method will be considered as failed.";Julen Pardo;16/02/2016
17;course_filter/course_filter;meets_minimum_previous_students;"$currentcourseid = <generated>
$currentyear = 2016";"There are three different tests for this method:
 - One that creates one student less than the minimum (expecting to return false).
 - One that creates the same student as the minimum (expecting to return true).
 - One that creates one more student than the minimum (expecting to return true).
The courses and student are created using the data generator, so the ids are unknown.";Boundary;Yes;Ok;"The results of the test of this method is the result of all the boundary tests created; if one of these boundary test fails, the result of the test of this method will be considered as failed.";Julen Pardo;16/02/2016
18;recommendator/abstract_recommendator;select_students;"$currentcourseid = <generated>
$year = 2016";"Test creates 20 students. There are three different tests:
 - One for the lower limit.
 - One for the upper limit.
 - One for the equal value.";Boundary;No;;;;
